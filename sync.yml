---
# TODO: update variable-check for this playbook
# - include: variable-check.yml
#   vars:
#     playbook: deploy.yml

- name: Sync WP site
  hosts: web:&{{ dest }}
  remote_user: "{{ web_user }}"

  vars:
    deploy_build_before: "{{ playbook_dir }}/deploy-hooks/build-before.yml"
    deploy_build_after: "{{ playbook_dir }}/roles/deploy/hooks/build-after.yml"
    deploy_finalize_after: "{{ playbook_dir }}/roles/deploy/hooks/finalize-after.yml"
    project: "{{ wordpress_sites[site] }}"
    project_root: "{{ www_root }}/{{ site }}"
    wordpress_env_defaults:
      db_host: localhost
      db_name: "{{ site | underscore }}_{{ dest }}"
      db_user: "{{ site | underscore }}"
      disable_wp_cron: true
      wp_env: "{{ dest }}"
      wp_home: "{{ project.ssl.enabled | default(false) | ternary('https', 'http') }}://{{ project.site_hosts | map(attribute='canonical') | first }}"
      wp_siteurl: "{{ project.ssl.enabled | default(false) | ternary('https', 'http') }}://{{ project.site_hosts | map(attribute='canonical') | first }}/wp"
    site_env: "{{ wordpress_env_defaults | combine(project.env | default({}), vault_wordpress_sites[site].env) }}"
    project_local_path: "{{ (lookup('env', 'USER') == 'vagrant') | ternary(project_root + '/' + project_current_path, project.local_path) }}"

    project_current_path: "{{ project.current_path | default('current') }}"
    shared_path: "{{ project_root }}/shared"
    uploads_path: "{{ shared_path }}/uploads"

  pre_tasks:
    - name: Ensure site is valid
      connection: local
      fail:
        msg: "Site `{{ site | default('') }}` is not valid. Available sites to sync: {{ wordpress_sites.keys() | join(', ') }}"
      when: wordpress_sites[site | default('')] is not defined

    - name: Ensure repo is valid
      connection: local
      fail:
        msg: |
          Invalid Git repository.
          Ensure that your site's `repo` variable is defined in `group_vars/{{ dest }}/wordpress_sites.yml` and uses the SSH format (example: git@github.com:roots/bedrock.git)
          More info:
          > https://roots.io/trellis/docs/deploys/
      when: project.repo is not defined or not project.repo | match(".*@.*:.*\.git")

  tasks:
    - name: get hostname
      command: hostname
      register: hostname

    - name: print hostname
      debug:
        var: hostname.stdout

    - name: create file on src to sync
      file:
        state: touch
        path: "{{ uploads_path }}/{{ ansible_date_time.epoch }}"
      delegate_to: "{{ groups['production'][0] }}"

    - name: sync dest folder with src folder
      synchronize:
        src: "{{ uploads_path }}"
        dest: "{{ shared_path }}"
      delegate_to: "{{ groups['production'][0] }}"

    - name: check file was synced
      stat:
        path: "{{ uploads_path }}/{{ ansible_date_time.epoch }}"
      register: stat_result

    - fail:
        msg: 'file was not synced'
      when: stat_result.stat.exists == False
